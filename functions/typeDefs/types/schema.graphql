scalar Date

enum ProgrammingLanguage {
  CPP
  PYTHON
  JAVA
  JAVASCRIPT
  GO
  RUST
}

enum School {
  IPN
  UNAM
}

enum Company {
  Microsoft
  Google
  Facebook
}

enum CompanyRole {
  Intern
  Explore
  STEP
  FTE
}

enum Role {
  Root
  Interviewee
  Interviewer
}

enum Status {
  Not_confirmed
  Confirmed
  Cancelled_by_interviewer
  Cancelled_by_interviewee
}

enum Score {
  No_Hire
  Undetermined
  Hire
  Strongly_Hire
}

type User {
  uid: String!
  email: String!
  name: String!
  role: [Role!]!
  interviewee: Interviewee
  interviewer: Interviewer
}

input UserIntervieweeInput {
  email: String!
  name: String!
  # role: [Role!]!
  interviewee: IntervieweeInput!
  #interviewer: Interviewer
}

input UserInterviewerInput {
  email: String!
  name: String!
  #interviewer: Interviewer
}

type Interviewee {
  uid: String!
  # user: User!
  programmingLanguage: [ProgrammingLanguage]!
  school: School
  resumeLink: String
  roleApplyingTo: CompanyRole
  companiesApplyingTo: [Company]!
  typesOfInterview: [String]!
  availability: [Date]!
  maxInterviewsPerWeek: Int
  upcomingRealInterviews: [RealInterview]!
  interviews: [Interview]!
}

input IntervieweeInput {
  programmingLanguage: [ProgrammingLanguage]!
  school: School
  resumeLink: String
  roleApplyingTo: CompanyRole
  companiesApplyingTo: [Company]!
  typesOfInterview: [String]!
  availability: [Date] # !
  maxInterviewsPerWeek: Int!
  #upcomingRealInterviews: [RealInterview]!
  #interviews: [Interview]!
}

type Interviewer {
  uid: String!
  user: User!
  isMentioned: Boolean
  description: String
}

type Interview {
  interviewee: Interviewee!
  interviewer: Interviewer!
  date: Date!
  sharedDoc: String!
  place: String!
  status: Status!
  interviews: [Interview]!
  score: Score
}

type RealInterview {
  company: Company!
  date: Date!
  user: User!
}
